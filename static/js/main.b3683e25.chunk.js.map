{"version":3,"sources":["buttons.js","App.js","display_box.js","screen.js","index.js"],"names":["Button","props","className","class","type","value","label","onClick","clicked","App","useState","inputString","setNewInput","eachInput","deleteInput","slice","clearInput","setNewOutput","outputString","newOutput","eval","id","input","output","Math","PI","E","DisplayBox","readOnly","Screen","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b3683e25.chunk.js","sourcesContent":["//each button has a unique prop to pass through, so don't need a lot of components\r\nimport React from \"react\";\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <input\r\n      className={props.class}\r\n      type=\"button\"\r\n      value={props.label}\r\n      onClick={props.clicked}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import \"./styles.css\";\nimport React, { useState } from \"react\";\nimport Button from \"./buttons.js\";\nimport Screen from \"./screen.js\";\n\nexport default function App() {\n  //strings not adding together right\n  let [inputString, setNewInput] = useState(\"\");\n  const eachInput = (label) => {\n    setNewInput(inputString + label);\n  };\n\n  const deleteInput = () => {\n    if (inputString !== \"\") {\n      setNewInput(inputString.slice(0, -1));\n    }\n  };\n  const clearInput = () => {\n    setNewInput(\"\");\n    setNewOutput(\"\");\n  };\n\n  let [outputString, setNewOutput] = useState(\"\");\n  const newOutput = () => {\n    setNewOutput(eval(inputString));\n    setNewInput(\"\");\n  };\n\n  //need to add the labels to the function each input\n  return (\n    <div className=\"App\">\n      <div>\n        <h1 id=\"title\">Phuong's Basic Calculator</h1>\n        <div id=\"calc-whole\">\n          <Screen input={inputString} output={outputString} />\n          <div id=\"calc-body\">\n            <div>\n              <Button class=\"mistake\" label={\"Clear\"} clicked={clearInput} />\n              <Button class=\"mistake\" label={\"Delete\"} clicked={deleteInput} />\n              <Button\n                class=\"operators\"\n                label={\"%\"}\n                clicked={() => eachInput(\"%\")}\n              />\n              <Button\n                class=\"operators\"\n                label={\"^\"}\n                clicked={() => eachInput(\"**\")}\n              />\n            </div>\n            <div>\n              <Button\n                class=\"nums\"\n                label={\"Ï€\"}\n                clicked={() => eachInput(Math.PI)}\n              />\n              <Button\n                class=\"nums\"\n                label={\"e\"}\n                clicked={() => eachInput(Math.E)}\n              />\n              <Button\n                class=\"operators\"\n                label={\".\"}\n                clicked={() => eachInput(\".\")}\n              />\n              <Button\n                class=\"operators\"\n                label={\"/\"}\n                clicked={() => eachInput(\"/\")}\n              />\n            </div>\n            <div>\n              <Button class=\"nums\" label={\"7\"} clicked={() => eachInput(\"7\")} />\n              <Button class=\"nums\" label={\"8\"} clicked={() => eachInput(\"8\")} />\n              <Button class=\"nums\" label={\"9\"} clicked={() => eachInput(\"9\")} />\n              <Button\n                class=\"operators\"\n                label={\"*\"}\n                clicked={() => eachInput(\"*\")}\n              />\n            </div>\n            <div>\n              <Button class=\"nums\" label={\"4\"} clicked={() => eachInput(\"4\")} />\n              <Button class=\"nums\" label={\"5\"} clicked={() => eachInput(\"5\")} />\n              <Button class=\"nums\" label={\"6\"} clicked={() => eachInput(\"6\")} />\n              <Button\n                class=\"operators\"\n                label={\"-\"}\n                clicked={() => eachInput(\"-\")}\n              />\n            </div>\n            <div>\n              <Button class=\"nums\" label={\"1\"} clicked={() => eachInput(\"1\")} />\n              <Button class=\"nums\" label={\"2\"} clicked={() => eachInput(\"2\")} />\n              <Button class=\"nums\" label={\"3\"} clicked={() => eachInput(\"3\")} />\n              <Button\n                class=\"operators\"\n                label={\"+\"}\n                clicked={() => eachInput(\"+\")}\n              />\n            </div>\n            <div>\n              <Button\n                class=\"operators\"\n                label={\"(\"}\n                clicked={() => eachInput(\"(\")}\n              />\n              <Button\n                class=\"operators\"\n                label={\")\"}\n                clicked={() => eachInput(\")\")}\n              />\n              <Button class=\"nums\" label={\"0\"} clicked={() => eachInput(\"0\")} />\n              <Button class=\"equal\" label={\"=\"} clicked={newOutput} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\n\r\nfunction DisplayBox(props) {\r\n  return (\r\n    <div className=\"display-row\">\r\n      <input type=\"text\" readOnly value={props.value} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayBox;\r\n","import React from \"react\";\r\nimport DisplayBox from \"./display_box.js\";\r\n\r\nfunction Screen(props) {\r\n  return (\r\n    <div id=\"screen\">\r\n      <DisplayBox value={props.input} />\r\n      <DisplayBox value={props.output} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Screen;\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}